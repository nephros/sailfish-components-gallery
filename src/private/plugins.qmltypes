import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -noinstantiate -nonrelocatable -dependencies dependencies.json Sailfish.Gallery.private 1.0'

Module {
    dependencies: [
        "Amber.Mpris 1.0",
        "Nemo.Configuration 1.0",
        "Nemo.FileManager 1.0",
        "Nemo.KeepAlive 1.2",
        "Nemo.Notifications 1.0",
        "Nemo.Policy 1.0",
        "Nemo.Thumbnailer 1.0",
        "QtDocGallery 5.0",
        "QtGraphicalEffects 1.0",
        "QtGraphicalEffects.private 1.0",
        "QtMultimedia 5.6",
        "QtQml 2.0",
        "QtQml.Models 2.2",
        "QtQuick 2.6",
        "QtQuick.Window 2.1",
        "Sailfish.Ambience 1.0",
        "Sailfish.Gallery 1.0",
        "Sailfish.Media 1.0",
        "Sailfish.Share 1.0",
        "Sailfish.Silica.private 1.0"
    ]
    Component {
        name: "DeclarativeAvatarFileHandler"
        prototype: "QObject"
        exports: ["Sailfish.Gallery.private/AvatarFileHandler 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "createNewAvatarFileName"
            type: "string"
            Parameter { name: "base"; type: "string" }
        }
    }
    Component {
        name: "DeclarativeImageEditor"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Sailfish.Gallery.private/ImageEditor 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "EditOperationType"
            values: {
                "None": 0,
                "Crop": 1,
                "Rotate": 2,
                "AdjustLevels": 3
            }
        }
        Property { name: "source"; type: "QUrl" }
        Property { name: "target"; type: "QUrl" }
        Signal {
            name: "cropped"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "rotated"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "levelsAdjusted"
            Parameter { name: "success"; type: "bool" }
        }
        Method {
            name: "crop"
            Parameter { name: "cropSize"; type: "QSizeF" }
            Parameter { name: "imageSize"; type: "QSizeF" }
            Parameter { name: "position"; type: "QPointF" }
        }
        Method {
            name: "rotate"
            Parameter { name: "rotation"; type: "int" }
        }
        Method {
            name: "adjustLevels"
            Parameter { name: "brightness"; type: "double" }
            Parameter { name: "contrast"; type: "double" }
        }
    }
    Component {
        name: "DeclarativeImageMetadata"
        prototype: "QObject"
        exports: ["Sailfish.Gallery.private/ImageMetadata 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Property { name: "autoUpdate"; type: "bool" }
        Property { name: "orientation"; type: "int"; isReadonly: true }
        Property { name: "width"; type: "int"; isReadonly: true }
        Property { name: "height"; type: "int"; isReadonly: true }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Signal { name: "hasExifChanged" }
        Signal { name: "hasXmpChanged" }
    }
    Component {
        name: "ImageWriter"
        prototype: "QObject"
        exports: ["Sailfish.Gallery.private/ImageWriter 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "isMimeTypeSupported"
            type: "bool"
            Parameter { name: "mimeType"; type: "string" }
        }
    }
}
